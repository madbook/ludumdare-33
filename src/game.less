
.animation(@props) {
  -webkit-animation: @props;
  -moz-animation: @props;
  animation: @props;
}

.transform(@props) {
  -webkit-transform: @props;
  transform: @props;
}

.transform-origin(@props) {
  -webkit-transform-origin: @props;
  transform-origin: @props;
}

.transition(@props) {
  -webkit-transition: @props;
  transition: @props;
}

.box-sizing(@props) {
  -moz-box-sizing: @props;
  box-sizing: @props;
}

* {
  .box-sizing(border-box);
}

.display-flex() {
  display: -webkit-flex;
  display: flex;
}

.justify-content(@props) {
  -webkit-justify-content: @props;
  justify-content: @props;
}

.align-items(@props) {
  -webkit-align-items: @props;
  align-items: @props;
}

.flex-wrap(@props) {
  -webkit-flex-wrap: @props;
  flex-wrap: @props;
}

.flex(@props) {
  -webkit-flex: @props;
  flex: @props;
}

.aspect-ratio-canvas {
  height: auto;
  width: 100%;
}

body {
  .align-items(center);
  .display-flex();
  .justify-content(center);
  background-color: #27322D;
}

main {
  padding: 20px;
  background-color: #5B907A;
}

.game-board {
  .display-flex();
  .flex-wrap(wrap);
  background-color: #fff;
  border: 1px solid: #ddd;
  width: 600px;
}

.tile {
  .flex(0 0 20%);
  background-color: #ddd;
  cursor: pointer;
  position: relative;

  //
  font: 10px sans-serif;
  color: white;
}

.tile-background {
  background-color: #73B596;
  background-size: 100% 100%;
  bottom: 0;
  height: 100%;
  pointer-events: none;
  position: absolute;
  width: 100%;  

  .variant-1 & {
    background-image: url('../assets/grass-1.png');
  }
  .variant-2 & {
    background-image: url('../assets/grass-2.png');
  }
  .variant-3 & {
    background-image: url('../assets/grass-3.png');
  }
  .variant-4 & {
    background-image: url('../assets/grass-4.png');
  }
  .variant-5 & {
    background-image: url('../assets/grass-5.png');
  }

  .flip-background & {
    .transform(~"scale(-1, 1)");
  }
}

  
.tile-display {
  bottom: 0;
  height: 150%;
  left: 0;
  pointer-events: none;
  position: absolute;
  width: 100%;
  z-index: 100;
  background-size: 100% 100%;
}

.tile-display-container {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  bottom: 0;
  z-index: 100;
  .transform-origin(50% 100%);

}

.player,
.monster,
.player-monster,
.barrel,
.barrel-full,
.thinger {
  &:hover .tile-display-container {
    .transform(~"scale(1.1, 1.1)");
    // z-index: 200;
  }
}

.tile.move-highlight {
  &:after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: '';
    display: block;
    background-image: url('../assets/arrow.png');
    background-size: 100% 100%;
  }
  &-up:after {
    .transform(~"rotate(-90deg)");
  }
  &-down:after {
    .transform(~"rotate(90deg)");
  }
  &-left:after {
    .transform(~"rotate(-180deg)");
  }
}

.tile.player,
.tile.player-monster,
.tile.thinger,
.tile.monster {
  .tile-display {
    .animation(~"idle 5s infinite linear");
  }
}

.tile.player,
.tile.player-monster,
.tile.thinger,
.tile.barrel,
.tile.barrel-full,
.tile.monster {
  .tile-display {
    bottom: 25%;
    .transform-origin(50% 100%);
  }
  
  &.slide-left,
  &.slide-right,
  &.slide-up,
  &.slide-down {
    .tile-display-container {
      transition: -webkit-transform 0.3s linear;
      transition: transform 0.3s linear;
      .transform(translate(0, 0));
      .animation(none);
    } 
  }
  

  &.slide-left {
    .tile-display-container {
      .transform(~"translate(-100%, 0)");
    }
  }

  &.slide-right {
    .tile-display-container {
      .transform(~"translate(100%, 0)");
    }
  }

  &.slide-up {
    .tile-display-container {
      .transform(~"translate(0, -100%)");
    }
  }

  &.slide-down {
    .tile-display-container {
      .transform(~"translate(0, 100%)");
    }
  }
}

.tile.player {
  .tile-display {
    background-image: url('../assets/player.png');
  }
}

.tile.player-monster {
  .tile-display {
    background-image: url('../assets/monster2.png');
  }
}

.tile.thinger {
  .tile-display {
    background-image: url('../assets/thinger.png');
  }

  &.slide .tile-display {
    background-image: url('../assets/thinger-following.png');
  }
}

.tile.monster {
  .tile-display {
    background-image: url('../assets/monster.png');
  }
}

.tile.barrel {
  .tile-display {
    background-image: url('../assets/barrel-empty.png');
  }
}

.tile.barrel-full {
  .tile-display {
    background-image: url('../assets/barrel-full.png');
  }
}

.tile.wall {
  .tile-display {
    background-image: url('../assets/wall.png');
    background-size: 100% 100%;
    bottom: 0;
  }
}


@keyframes idle {
  0% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  25% { .transform(~"matrix3d(1, 0, 0, 0, 0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  50% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  75% { .transform(~"matrix3d(1, 0, 0, 0, -0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  100% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
}

@-webkit-keyframes idle {
  0% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  25% { .transform(~"matrix3d(1, 0, 0, 0, 0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  50% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  75% { .transform(~"matrix3d(1, 0, 0, 0, -0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  100% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
}

@-moz-keyframes idle {
  0% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  25% { .transform(~"matrix3d(1, 0, 0, 0, 0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  50% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  75% { .transform(~"matrix3d(1, 0, 0, 0, -0.1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
  100% { .transform(~"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"); }
}